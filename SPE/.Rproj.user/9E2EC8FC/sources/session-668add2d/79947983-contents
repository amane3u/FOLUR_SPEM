#Data structure for SPEM in python


#### Step1 biltarel_trade_cost_crop ###########

### Load data####
country_information_WHEA <- read.csv("C:/Users/Adnane/Desktop/SPE_inputs/Model_inputs/Country_data/country_information_WHEA.csv")
country_information_MAIZ <- read.csv("C:/Users/Adnane/Desktop/SPE_inputs/Model_inputs/Country_data/country_information_MAIZ.csv")
country_information_RICE <- read.csv("C:/Users/Adnane/Desktop/SPE_inputs/Model_inputs/Country_data/country_information_RICE.csv")
country_information_ <- read.csv("C:/Users/Adnane/Desktop/SPE_inputs/Model_inputs/Country_data/country_information_RICE.csv")



#######################

# Trade_data
FOLUR_trade_dt_2020<-FOLUR_trade_dt_2020%>%
  filter(FABLE_Exporter!="IRL"& FABLE_Importer!="IRL"& FABLE_Item!="Palm_oil")
unique(FOLUR_trade_dt_2020$FABLE_Item)

#Tarrif_data
tarrif_dt_2020<-tarrif_dt%>%
  filter(FABLE_Exporter!="IRL"& FABLE_Importer!="IRL"& Year=="2020" )%>%
  select(-Regional_lv)
unique(tarrif_dt_2020$FABLE_Item)
# First join
bil_trade<-FOLUR_trade_dt_2020%>%
  full_join(tarrif_dt_2020,by=c("FABLE_Exporter","FABLE_Importer","Year","FABLE_Item"))


bil_trade <- bil_trade %>%
  mutate(
    adv_ij_agg = replace_na(adv_ij_agg, 0),
    sdt_ij_agg = replace_na(sdt_ij_agg, 0)
  )
bil_trade$Q_ij <- ifelse(bil_trade$Q_ij < 0, -bil_trade$Q_ij, bil_trade$Q_ij)
#Transport_cost
transport_costs_dt_test<-transport_costs_dt_test%>%
  select(FABLE_Exporter,FABLE_Importer,Year,FABLE_Item,transport_cost_usd_t)%>%
  filter(FABLE_Exporter!="IRL"& FABLE_Importer!="IRL" & FABLE_Item!="Palm_oil")
#second_join
bilateral_trade_cost_crop<-bil_trade%>%
  full_join(transport_costs_dt_test,by=c("FABLE_Exporter","FABLE_Importer","Year","FABLE_Item"))



# bil_trade_cost dataframe

bilateral_trade_cost_crop <- bilateral_trade_cost_crop %>%
  select(FABLE_Exporter, FABLE_Importer,FABLE_Item, Q_ij, net_trade_ij,transport_cost_usd_t ,adv_ij_agg, sdt_ij_agg) %>%
  rename(from_iso3 = FABLE_Exporter,
         to_iso3 = FABLE_Importer,
         q_initial = Q_ij,
         trade_USD_t = transport_cost_usd_t,
         adv = adv_ij_agg,
         sdt_USD_t = sdt_ij_agg,
         net_initial = net_trade_ij) %>%
  mutate(dummy_q_initial = ifelse(q_initial != 0, 1, 0))

unique(bilateral_trade_cost_crop$FABLE_Item)










###################################################   Rice ###################################################
bilateral_trade_cost_rice<-bilateral_trade_cost_crop%>%
  filter(FABLE_Item=="Rice")%>%
  select(- FABLE_Item)%>%
  mutate(SPAM_code = "RICE")
  
  
# country_info
#Rice_elas abd Tot Demand and Tot supply
rice_elas<-country_information_RICE %>%
  select(iso3,demand_elas,supply_elas)

rice_elas$FABLE_Exporter <- Country_mapping_250120_updated_2$FABLE_cc[
  match(rice_elas$iso3, Country_mapping_250120_updated_2$ISO3_code)
]

rice_elas <- rice_elas %>%
  filter(!is.na(FABLE_Exporter))


rice_elas_2 <- rice_elas %>%
  group_by(FABLE_Exporter) %>%
  summarise(
    demand_elas = mean(demand_elas, na.rm = TRUE),
    supply_elas = mean(supply_elas, na.rm = TRUE)
  )%>%
  filter(FABLE_Exporter != "IRL")

rice_eq<-totaleq_folur_ct_adj%>%
  filter(product=="Rice"& year=="2020")%>%
  select(location,product,demande_q,supply_q)%>%
  rename(FABLE_Exporter = location,
         FABLE_Item = product)


country_info_step_1_RICE<-rice_elas_2%>%
  full_join(rice_eq,by=c("FABLE_Exporter"))%>%
  select(- FABLE_Item) 

# Rice_price

colnames(FAO_prices_dt_red)


FAO_prices_dt_red<-FAO_prices_dt_red%>%
  select(FABLE_Exporter,FABLE_Item,Year,prodprice_i_agg_imp_final)

rice_prodprice<-FAO_prices_dt_red%>%
  filter(FABLE_Item=="Rice"& Year=="2020")%>%
  rename(Production_USD_t =prodprice_i_agg_imp_final)%>%
  select(-Year, - FABLE_Item)
  
country_info_step_2_RICE <- country_info_step_1_RICE %>%
  full_join(rice_prodprice, by = c("FABLE_Exporter")) %>%
  filter(FABLE_Exporter != "IRL") %>%
  rename(iso3 = FABLE_Exporter,
         demand_q = demande_q) %>%
  mutate(SPAM_code = "RICE")  



# Extradited_csv

write.csv(country_info_step_2_RICE, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/country_information_RICE.csv", 
          row.names = FALSE)

write.csv(bilateral_trade_cost_rice, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/bilateral_trade_cost_RICE.csv", 
          row.names = FALSE)





############################ SOY ################################

bilateral_trade_cost_soyabean<-bilateral_trade_cost_crop%>%
  filter(FABLE_Item=="Soyabean")%>%
  select(- FABLE_Item)%>%
  mutate(SPAM_code = "SOYABEAN")


# country_info

Soyabean_elas<-country_information_SOYB %>%
  select(iso3,demand_elas,supply_elas)

Soyabean_elas$FABLE_Exporter <- Country_mapping_250120_updated_2$FABLE_cc[
  match(Soyabean_elas$iso3, Country_mapping_250120_updated_2$ISO3_code)
]

Soyabean_elas <- Soyabean_elas %>%
  filter(!is.na(FABLE_Exporter))


Soyabean_elas_2 <- Soyabean_elas %>%
  group_by(FABLE_Exporter) %>%
  summarise(
    demand_elas = mean(demand_elas, na.rm = TRUE),
    supply_elas = mean(supply_elas, na.rm = TRUE)
  )%>%
  filter(FABLE_Exporter != "IRL")

soyabean_eq<-totaleq_folur_ct_adj%>%
  filter(product=="Soyabean"& year=="2020")%>%
  select(location,product,demande_q,supply_q)%>%
  rename(FABLE_Exporter = location,
         FABLE_Item = product)


country_info_step_1_SOYB<-Soyabean_elas_2%>%
  full_join(soyabean_eq,by=c("FABLE_Exporter"))%>%
  select(- FABLE_Item) 

# Rice_price

colnames(FAO_prices_dt_red)


FAO_prices_dt_red<-FAO_prices_dt_red%>%
  select(FABLE_Exporter,FABLE_Item,Year,prodprice_i_agg_imp_final)

soyabean_prodprice<-FAO_prices_dt_red%>%
  filter(FABLE_Item=="Soyabean"& Year=="2020")%>%
  rename(Production_USD_t =prodprice_i_agg_imp_final)%>%
  select(-Year, - FABLE_Item)

country_info_step_2_SOYB <- country_info_step_1_SOYB %>%
  full_join(soyabean_prodprice, by = c("FABLE_Exporter")) %>%
  filter(FABLE_Exporter != "IRL") %>%
  rename(iso3 = FABLE_Exporter,
         demand_q = demande_q) %>%
  mutate(SPAM_code = "SOYABEAN")  



# Extradited_csv

write.csv(country_info_step_2_SOYB, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/country_information_SOYB.csv", 
          row.names = FALSE)

write.csv(bilateral_trade_cost_soyabean, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/bilateral_trade_cost_SOYB.csv", 
          row.names = FALSE)



# ############ Wheat #######

