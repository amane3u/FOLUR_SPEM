# Load necessary libraries
library(readxl)      # For reading Excel files
library(ggplot2)     # For plotting
library(dplyr)       # For data manipulation
library(gridExtra)   # For displaying tables as graphics

# Load the data

# Create categories for Digital Trade Participation (score 3.3)
IT_scores_weighted <- IT_scores_weighted %>%
  mutate(Digital_Trade_Group = cut(`Category score - 3.3 PARTICIPATION IN CROSS-BORDER DIGITAL TRADE`, 
                                   breaks = c(-Inf, 5, 10, Inf), 
                                   labels = c("Low (0-5)", "Medium (5-10)", "High (>10)")))

# Plot: Boxplot with jittered points and styled design
ggplot(IT_scores_weighted, aes(x = Digital_Trade_Group, y = `Total score - International Trade`, fill = Digital_Trade_Group)) +
  geom_boxplot(width = 0.6, outlier.shape = NA) +  # Boxplot without visible outliers
  geom_jitter(aes(color = Digital_Trade_Group), size = 2, alpha = 0.5, width = 0.2) +  # Jittered points
  scale_fill_manual(values = c("Low (0-5)" = "#F8766D", "Medium (2-5)" = "#00BA38", "High (5-10)" = "#619CFF")) +  # Custom colors
  scale_color_manual(values = c("Low (0-5)" = "#F8766D", "Medium (2-5)" = "#00BA38", "High (5-10)" = "#619CFF")) +  # Colors for points
  labs(title = "Trade Performance by Digital Trade Participation (50 Economies)",
       subtitle = "B-READY 2024 Data",
       x = "Digital Trade Participation Level (Score 3.3)",
       y = "Total International Trade Score",
       caption = "Source: B-READY 2024") +
  theme_minimal() +
  theme(legend.position = "none",  # No need for a redundant legend
        plot.title = element_text(face = "bold", size = 14),
        plot.subtitle = element_text(size = 12),
        axis.title = element_text(size = 12),
        axis.text = element_text(size = 10))

# Create the table for Best and Worst Performers
table_data <- IT_scores_weighted %>%
  arrange(desc(`Total score - International Trade`)) %>%
  slice(c(1:10, (n()-9):n())) %>%  # Top 10 and Bottom 10 performers
  select(`Expert's country`, 
         `Total score - International Trade`, 
         `Category score - 3.3 PARTICIPATION IN CROSS-BORDER DIGITAL TRADE`, 
         `Category score - 2.1 DIGITAL AND PHYSICAL INFRASTRUCTURE`, 
         `Category score - RESTRICTIONS ON INTERNATIONAL TRADE`) %>%
  rename(Country = `Expert's country`, 
         Total_Score = `Total score - International Trade`, 
         Digital_Trade_3.3 = `Category score - 3.3 PARTICIPATION IN CROSS-BORDER DIGITAL TRADE`, 
         Infrastructure_2.1 = `Category score - 2.1 DIGITAL AND PHYSICAL INFRASTRUCTURE`, 
         Trade_Restrictions = `Category score - RESTRICTIONS ON INTERNATIONAL TRADE`) %>%
  mutate(
    Ratio_Digital_vs_Infrastructure = round(Digital_Trade_3.3 / Infrastructure_2.1, 2),
    Ratio_Digital_vs_Restrictions = round(Digital_Trade_3.3 / Trade_Restrictions, 2)
  ) %>%
  mutate(
    Ratio_Digital_vs_Infrastructure = ifelse(is.infinite(Ratio_Digital_vs_Infrastructure) | is.nan(Ratio_Digital_vs_Infrastructure), 0, Ratio_Digital_vs_Infrastructure),
    Ratio_Digital_vs_Restrictions = ifelse(is.infinite(Ratio_Digital_vs_Restrictions) | is.nan(Ratio_Digital_vs_Restrictions), 0, Ratio_Digital_vs_Restrictions)
  ) %>%
  filter(!(Ratio_Digital_vs_Infrastructure == 0 & Ratio_Digital_vs_Restrictions == 0))  # Remove rows where both ratios are 0

# Create the table graphic object
table_plot <- tableGrob(table_data)

# Save the table as a JPG with adjusted size
ggsave("C:/Users/Adnane/Desktop/statistics_table.jpg", table_plot, width = 14, height = 8, units = "in")  # Save as JPG to Desktop
