# Création des colonnes en faisant correspondre les codes ISO3 avec FABLE_cc
dist_cepii$FABLE_Exporter <- Country_mapping_250120_updated_2$FABLE_cc[match(dist_cepii$iso_o, Country_mapping_250120_updated_2$ISO3_code)]
dist_cepii$FABLE_Importer <- Country_mapping_250120_updated_2$FABLE_cc[match(dist_cepii$iso_d, Country_mapping_250120_updated_2$ISO3_code)]

dist_cepii_2<-dist_cepii %>%
  select(iso_o,FABLE_Exporter,iso_d,FABLE_Importer,distw)
dist_cepii_2 <- dist_cepii_2 %>% filter(!is.na(FABLE_Exporter) & !is.na(FABLE_Importer))
unique(dist_cepii_2$FABLE_Exporter)

dist_cepii_2 <- dist_cepii_2 %>%
  filter(iso_o != iso_d)

dist_cepii_2$distw <- as.numeric(dist_cepii_2$distw)

dist_cepii_agg<-dist_cepii_2%>%
  group_by(FABLE_Exporter,FABLE_Importer)%>%
  mutate(dist_adj=mean(distw,na.rm=TRUE),.groups="drop")
dist_cepii_agg<-dist_cepii_agg%>%
  select(-.groups)


dist_cepii_agg_2 <- dist_cepii_agg %>%
  filter(FABLE_Exporter != FABLE_Importer)%>%
  select(- distw)%>%
  distinct(dist_adj)

FOLUR_trade_dt <- FOLUR_bil_4_final_spe%>%
  select(-Net_Trade)

write.csv(FOLUR_trade_dt, 
          file = "C:\\Users\\Adnane\\Desktop\\BACI-MacMap\\MAC-MAPHS6\\data_output\\250403_FOLUR_trade_dt.csv", 
          row.names = FALSE)

colnames(FOLUR_trade_dt)

FOLUR_trade_dt_clean <- FOLUR_trade_dt %>%
  select(FABLE_Exporter, FABLE_Importer, Year, FABLE_Item, Q_export, net_trade_ij) %>%
  rename(Q_ij = Q_export)


transport_costs_dt <- merge(dist_cepii_agg_2, FOLUR_trade_dt_clean, 
                            by = c("FABLE_Exporter", "FABLE_Importer"), 
                            all.x = TRUE)


base_cost <- 0.0015  # Ajusté pour des coûts réalistes (7-153 USD/tonne)
beta <- 0.26       # Réduit pour limiter l'amplification exponentielle
gamma <- -0.01     # Conservé pour de légères économies d'échelle

transport_costs_dt2 <- transport_costs_dt %>%
  mutate(
    ln_dist = log(dist_adj),
    ln_quantity_kt = ifelse(Q_ij == 0, 0, log(Q_ij)),  # Remplace par 0 si Q_ij est 0
    cost_per_tonne_km = ifelse(Q_ij == 0, 0, base_cost * exp(beta * ln_dist + gamma * ln_quantity_kt)),  # Remplace par 0 si Q_ij est 0
    transport_cost_usd_t = ifelse(Q_ij == 0, 0, cost_per_tonne_km * dist_adj)  # Remplace par 0 si Q_ij est 0
  )

write.csv(transport_costs_dt2, 
          file = "C:\\Users\\Adnane\\Desktop\\BACI-MacMap\\MAC-MAPHS6\\data_output\\250403_transport_costs_dt.csv", 
          row.names = FALSE)