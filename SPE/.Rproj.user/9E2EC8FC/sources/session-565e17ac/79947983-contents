#Data structure for SPEM in python


#### Step1 biltarel_trade_cost_crop ###########

### Load data####
country_information_WHEA <- read.csv("C:/Users/Adnane/Desktop/SPE_inputs/Model_inputs/Country_data/country_information_WHEA.csv")
country_information_MAIZ <- read.csv("C:/Users/Adnane/Desktop/SPE_inputs/Model_inputs/Country_data/country_information_MAIZ.csv")
country_information_RICE <- read.csv("C:/Users/Adnane/Desktop/SPE_inputs/Model_inputs/Country_data/country_information_RICE.csv")
country_information_SOYB <- read.csv("C:/Users/Adnane/Desktop/SPE_inputs/Model_inputs/Country_data/country_information_SOYB.csv")



#######################

# Trade_data
FOLUR_trade_dt_2020<-FOLUR_trade_dt_2020%>%
  filter(FABLE_Exporter!="IRL"& FABLE_Importer!="IRL"& FABLE_Item!="Palm_oil")
unique(FOLUR_trade_dt_2020$FABLE_Item)

#Tarrif_data
tarrif_dt_2020<-tarrif_dt%>%
  filter(FABLE_Exporter!="IRL"& FABLE_Importer!="IRL"& Year=="2020" )%>%
  select(-Regional_lv)
unique(tarrif_dt_2020$FABLE_Item)
# First join
bil_trade<-FOLUR_trade_dt_2020%>%
  full_join(tarrif_dt_2020,by=c("FABLE_Exporter","FABLE_Importer","Year","FABLE_Item"))


bil_trade <- bil_trade %>%
  mutate(
    adv_ij_agg = replace_na(adv_ij_agg, 0),
    sdt_ij_agg = replace_na(sdt_ij_agg, 0)
  )
bil_trade$Q_ij <- ifelse(bil_trade$Q_ij < 0, -bil_trade$Q_ij, bil_trade$Q_ij)
#Transport_cost
transport_costs_dt_test<-transport_costs_dt_test%>%
  select(FABLE_Exporter,FABLE_Importer,Year,FABLE_Item,transport_cost_usd_t)%>%
  filter(FABLE_Exporter!="IRL"& FABLE_Importer!="IRL" & FABLE_Item!="Palm_oil")
#second_join
bilateral_trade_cost_crop<-bil_trade%>%
  full_join(transport_costs_dt_test,by=c("FABLE_Exporter","FABLE_Importer","Year","FABLE_Item"))



# bil_trade_cost dataframe

bilateral_trade_cost_crop <- bilateral_trade_cost_crop %>%
  select(FABLE_Exporter, FABLE_Importer,FABLE_Item, Q_ij, net_trade_ij,transport_cost_usd_t ,adv_ij_agg, sdt_ij_agg) %>%
  rename(from_iso3 = FABLE_Exporter,
         to_iso3 = FABLE_Importer,
         q_initial = Q_ij,
         trade_USD_t = transport_cost_usd_t,
         adv = adv_ij_agg,
         sdt_USD_t = sdt_ij_agg,
         net_initial = net_trade_ij) %>%
  mutate(dummy_q_initial = ifelse(q_initial != 0, 1, 0))

unique(bilateral_trade_cost_crop$FABLE_Item)










###################################################   Rice ###################################################
bilateral_trade_cost_rice<-bilateral_trade_cost_crop%>%
  filter(FABLE_Item=="Rice")%>%
  select(- FABLE_Item)%>%
  mutate(SPAM_code = "RICE")
  
  
# country_info
#Rice_elas abd Tot Demand and Tot supply
rice_elas<-country_information_RICE %>%
  select(iso3,demand_elas,supply_elas)

rice_elas$FABLE_Exporter <- Country_mapping_250120_updated_2$FABLE_cc[
  match(rice_elas$iso3, Country_mapping_250120_updated_2$ISO3_code)
]

rice_elas <- rice_elas %>%
  filter(!is.na(FABLE_Exporter))


rice_elas_2 <- rice_elas %>%
  group_by(FABLE_Exporter) %>%
  summarise(
    demand_elas = mean(demand_elas, na.rm = TRUE),
    supply_elas = mean(supply_elas, na.rm = TRUE)
  )%>%
  filter(FABLE_Exporter != "IRL")

rice_eq<-totaleq_folur_ct_adj%>%
  filter(product=="Rice"& year=="2020")%>%
  select(location,product,demande_q,supply_q)%>%
  rename(FABLE_Exporter = location,
         FABLE_Item = product)


country_info_step_1_RICE<-rice_elas_2%>%
  full_join(rice_eq,by=c("FABLE_Exporter"))%>%
  select(- FABLE_Item) 

# Rice_price

colnames(FAO_prices_dt_red)


FAO_prices_dt_red<-FAO_prices_dt_red%>%
  select(FABLE_Exporter,FABLE_Item,Year,prodprice_i_agg_imp_final)

rice_prodprice<-FAO_prices_dt_red%>%
  filter(FABLE_Item=="Rice"& Year=="2020")%>%
  rename(Production_USD_t =prodprice_i_agg_imp_final)%>%
  select(-Year, - FABLE_Item)
  
country_info_step_2_RICE <- country_info_step_1_RICE %>%
  full_join(rice_prodprice, by = c("FABLE_Exporter")) %>%
  filter(FABLE_Exporter != "IRL") %>%
  rename(iso3 = FABLE_Exporter,
         demand_q = demande_q) %>%
  mutate(SPAM_code = "RICE")  



# Extradited_csv

write.csv(country_info_step_2_RICE, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/country_information_RICE.csv", 
          row.names = FALSE)

write.csv(bilateral_trade_cost_rice, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/bilateral_trade_cost_RICE.csv", 
          row.names = FALSE)





############################ SOY ################################

bilateral_trade_cost_soyabean<-bilateral_trade_cost_crop%>%
  filter(FABLE_Item=="Soyabean")%>%
  select(- FABLE_Item)%>%
  mutate(SPAM_code = "SOYABEAN")


# country_info

Soyabean_elas<-country_information_SOYB %>%
  select(iso3,demand_elas,supply_elas)

Soyabean_elas$FABLE_Exporter <- Country_mapping_250120_updated_2$FABLE_cc[
  match(Soyabean_elas$iso3, Country_mapping_250120_updated_2$ISO3_code)
]

Soyabean_elas <- Soyabean_elas %>%
  filter(!is.na(FABLE_Exporter))


Soyabean_elas_2 <- Soyabean_elas %>%
  group_by(FABLE_Exporter) %>%
  summarise(
    demand_elas = mean(demand_elas, na.rm = TRUE),
    supply_elas = mean(supply_elas, na.rm = TRUE)
  )%>%
  filter(FABLE_Exporter != "IRL")

soyabean_eq<-totaleq_folur_ct_adj%>%
  filter(product=="Soyabean"& year=="2020")%>%
  select(location,product,demande_q,supply_q)%>%
  rename(FABLE_Exporter = location,
         FABLE_Item = product)


country_info_step_1_SOYB<-Soyabean_elas_2%>%
  full_join(soyabean_eq,by=c("FABLE_Exporter"))%>%
  select(- FABLE_Item) 

# Rice_price

colnames(FAO_prices_dt_red)


FAO_prices_dt_red<-FAO_prices_dt_red%>%
  select(FABLE_Exporter,FABLE_Item,Year,prodprice_i_agg_imp_final)

soyabean_prodprice<-FAO_prices_dt_red%>%
  filter(FABLE_Item=="Soyabean"& Year=="2020")%>%
  rename(Production_USD_t =prodprice_i_agg_imp_final)%>%
  select(-Year, - FABLE_Item)

country_info_step_2_SOYB <- country_info_step_1_SOYB %>%
  full_join(soyabean_prodprice, by = c("FABLE_Exporter")) %>%
  filter(FABLE_Exporter != "IRL") %>%
  rename(iso3 = FABLE_Exporter,
         demand_q = demande_q) %>%
  mutate(SPAM_code = "SOYABEAN")  



# Extradited_csv

write.csv(country_info_step_2_SOYB, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/country_information_SOYB.csv", 
          row.names = FALSE)

write.csv(bilateral_trade_cost_soyabean, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/bilateral_trade_cost_SOYB.csv", 
          row.names = FALSE)



# ############ Wheat #######
bilateral_trade_cost_Wheat<-bilateral_trade_cost_crop%>%
  filter(FABLE_Item=="Wheat")%>%
  select(- FABLE_Item)%>%
  mutate(SPAM_code = "WHEAT")



#Country info 

Wheat_elas<-country_information_WHEA %>%
  select(iso3,demand_elas,supply_elas)

Wheat_elas$FABLE_Exporter <- Country_mapping_250120_updated_2$FABLE_cc[
  match(Wheat_elas$iso3, Country_mapping_250120_updated_2$ISO3_code)
]

Wheat_elas <- Wheat_elas %>%
  filter(!is.na(FABLE_Exporter))


Wheat_elas_2 <- Wheat_elas %>%
  group_by(FABLE_Exporter) %>%
  summarise(
    demand_elas = mean(demand_elas, na.rm = TRUE),
    supply_elas = mean(supply_elas, na.rm = TRUE)
  )%>%
  filter(FABLE_Exporter != "IRL")

wheat_eq<-totaleq_folur_ct_adj%>%
  filter(product=="Wheat"& year=="2020")%>%
  select(location,product,demande_q,supply_q)%>%
  rename(FABLE_Exporter = location,
         FABLE_Item = product)


country_info_step_1_WHEA<-Wheat_elas_2%>%
  full_join(wheat_eq,by=c("FABLE_Exporter"))%>%
  select(- FABLE_Item) 

# Wheat_price



wheat_prodprice<-FAO_prices_dt_red%>%
  filter(FABLE_Item=="Wheat"& Year=="2020")%>%
  rename(Production_USD_t =prodprice_i_agg_imp_final)%>%
  select(-Year, - FABLE_Item)

country_info_step_2_WHEA <- country_info_step_1_WHEA %>%
  full_join(soyabean_prodprice, by = c("FABLE_Exporter")) %>%
  filter(FABLE_Exporter != "IRL") %>%
  rename(iso3 = FABLE_Exporter,
         demand_q = demande_q) %>%
  mutate(SPAM_code = "WHEAT")  


# Extradited_csv

write.csv(country_info_step_2_WHEA, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/country_information_WHEA.csv", 
          row.names = FALSE)

write.csv(bilateral_trade_cost_Wheat, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/bilateral_trade_cost_WHEA.csv", 
          row.names = FALSE)









# ############ Corn #######
bilateral_trade_cost_corn<-bilateral_trade_cost_crop%>%
  filter(FABLE_Item=="Corn")%>%
  select(- FABLE_Item)%>%
  mutate(SPAM_code = "CORN")



#Country info 

corn_elas<-country_information_MAIZ %>%
  select(iso3,demand_elas,supply_elas)

corn_elas$FABLE_Exporter <- Country_mapping_250120_updated_2$FABLE_cc[
  match(corn_elas$iso3, Country_mapping_250120_updated_2$ISO3_code)
]

corn_elas <- corn_elas %>%
  filter(!is.na(FABLE_Exporter))


corn_elas_2 <- corn_elas %>%
  group_by(FABLE_Exporter) %>%
  summarise(
    demand_elas = mean(demand_elas, na.rm = TRUE),
    supply_elas = mean(supply_elas, na.rm = TRUE)
  )%>%
  filter(FABLE_Exporter != "IRL")

corn_eq<-totaleq_folur_ct_adj%>%
  filter(product=="Wheat"& year=="2020")%>%
  select(location,product,demande_q,supply_q)%>%
  rename(FABLE_Exporter = location,
         FABLE_Item = product)


country_info_step_1_CORN<-corn_elas_2%>%
  full_join(corn_eq,by=c("FABLE_Exporter"))%>%
  select(- FABLE_Item) 

# Wheat_price



corn_prodprice<-FAO_prices_dt_red%>%
  filter(FABLE_Item=="Corn"& Year=="2020")%>%
  rename(Production_USD_t =prodprice_i_agg_imp_final)%>%
  select(-Year, - FABLE_Item)

country_info_step_2_CORN <- country_info_step_1_CORN %>%
  full_join(corn_prodprice, by = c("FABLE_Exporter")) %>%
  filter(FABLE_Exporter != "IRL") %>%
  rename(iso3 = FABLE_Exporter,
         demand_q = demande_q) %>%
  mutate(SPAM_code = "CORN")  


# Extradited_csv

write.csv(country_info_step_2_CORN, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/country_information_CORN.csv", 
          row.names = FALSE)

write.csv(bilateral_trade_cost_corn, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/bilateral_trade_cost_CORN.csv", 
          row.names = FALSE)





###### Cocoa #####
bilateral_trade_cost_cocoa<-bilateral_trade_cost_crop%>%
  filter(FABLE_Item=="Cocoa")%>%
  select(- FABLE_Item)%>%
  mutate(SPAM_code = "COCOA")

country_info_step_2_COCOA<- elast_estim_2020 %>%
  filter(SPAM_Code =="COCOA")


##### COFFEE #####
bilateral_trade_cost_coffee<-bilateral_trade_cost_crop%>%
  filter(FABLE_Item=="Coffee")%>%
  select(- FABLE_Item)%>%
  mutate(SPAM_code = "COFFEE")


country_info_step_2_COFFEE<- elast_estim_2020 %>%
  filter(SPAM_Code =="COFFEE")

###### PALM_Oil####


bilateral_trade_cost_palm<-bilateral_trade_cost_crop%>%
  filter(FABLE_Item=="Palm Oil")%>%
  select(- FABLE_Item)%>%
  mutate(SPAM_code = "PALM OIL")

country_info_step_2_PALM<- elast_estim_2020 %>%
  filter(SPAM_Code =="PALM OIL")



#Extraction
write.csv(country_info_step_2_PALM, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/country_information_PALM.csv", 
          row.names = FALSE)

write.csv(bilateral_trade_cost_palm, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/bilateral_trade_cost_PALM.csv", 
          row.names = FALSE)


write.csv(country_info_step_2_COFFEE, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/country_information_COFFEE.csv", 
          row.names = FALSE)

write.csv(bilateral_trade_cost_coffee, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/bilateral_trade_cost_COFFEE.csv", 
          row.names = FALSE)

write.csv(country_info_step_2_COCOA, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/country_information_COCOA.csv", 
          row.names = FALSE)

write.csv(bilateral_trade_cost_Cocoa, 
          file = "C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/bilateral_trade_cost_COCOA.csv", 
          row.names = FALSE)























# Afficher les lignes avec NA
na_rows <- bilateral_trade_cost_coffee[!complete.cases(bilateral_trade_cost_coffee), ]
print(na_rows)

bilateral_trade_cost_coffee$trade_USD_t[bilateral_trade_cost_coffee$from_iso3 == "IND" & 
                                          bilateral_trade_cost_coffee$to_iso3 == "IND" & 
                                          is.na(bilateral_trade_cost_coffee$trade_USD_t)] <- 168.7624

# Remplacer NA pour IDN -> IDN
bilateral_trade_cost_coffee$trade_USD_t[bilateral_trade_cost_coffee$from_iso3 == "IDN" & 
                                          bilateral_trade_cost_coffee$to_iso3 == "IDN" & 
                                          is.na(bilateral_trade_cost_coffee$trade_USD_t)] <- 129.9718

# Vérifier
print(bilateral_trade_cost_coffee[!complete.cases(bilateral_trade_cost_coffee), ])

bilateral_trade_cost_coffee <- read.csv("C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/Trade_cost/bilateral_trade_cost_COFFEE.csv", stringsAsFactors = FALSE)
country_information_SUNF <- read.csv("C:/Users/Adnane/Desktop/SPE_inputs/Model_inputs/Country_data/country_information_SUNF.csv")

country_information_RICE <- read.csv("C:/Users/Adnane/Desktop/SPE_inputs/SPE_adaptation_adnane/Model_input/Country_data/country_information_RICE.csv", stringsAsFactors = FALSE)
colnames(country_information_COCOA)

# Calcul de la moyenne des colonnes numériques concernées
mean_demand_elas <- mean(country_information_COCOA$demand_elas, na.rm = TRUE)
mean_supply_elas <- mean(country_information_COCOA$supply_elas, na.rm = TRUE)
mean_demand_q <- mean(country_information_COCOA$demand_q, na.rm = TRUE)
mean_supply_q <- mean(country_information_COCOA$supply_q, na.rm = TRUE)

# Récupérer le SPAM_Code (on suppose qu’il est le même partout)
spam_code <- unique(country_information_COCOA$SPAM_Code)
if(length(spam_code) > 1) stop("SPAM_Code n'est pas unique, précise la valeur à utiliser.")

# Créer la nouvelle ligne
new_row <- data.frame(
  iso3 = "RWA",
  SPAM_Code = spam_code[1],
  demand_elas = mean_demand_elas,
  supply_elas = mean_supply_elas,
  demand_q = mean_demand_q,
  supply_q = mean_supply_q,
  Production_USD_t = NA  # à remplacer si tu as une valeur
)

# Ajouter la ligne au data frame
country_information_COCOA <- rbind(country_information_COCOA, new_row)
